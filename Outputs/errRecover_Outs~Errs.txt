OUTPUT OF test_errRecover.txt: 

class Utility {
    int var1 [ 4 ] [ 5 ] [ 8 ] [ 9 ] [ 1 ] [ 0 ] ;
    float var2 ;
    int findMax ( int array [ 100 ] ) {
        int maxValue ;
        int idx ;
        maxValue = array [ 100 ] ;
        for ( int idx = 99 ;
        idx > 0 ;
        idx = idx - 1 ) {
            f array [ idx ] ;
            
        };
        
    };
    maxValue findMin ( int array [ 100 ] ) {
        int minValue ;
        int idx ;
        minValue = array [ 100 ] ;
        for ( int idx = 1 ;
        idx <= 99 ;
        idx = ( idx ) + 1 ) {
            if ( array [ idx ] < maxValue ) then {
                maxValue = array [ idx ] ;
                
            }else {
                
            };
            
        };
        return ( minValue ) ;
        
    };
    
};
program {
    int sample [ 100 ] ;
    int idx ;
    int maxValue ;
    int minValue ;
    Utility utility ;
    Utility arrayUtility [ 2 ] [ 3 ] [ 6 ] [ 7 ] ;
    for ( int t = 0 ;
    t <= 100 ;
    t = t + 1 ) {
        get ( sample [ t ] ) ;
        sample [ t ] = ( sample [ t ] * randomize ( ) ) ;
        
    };
    maxValue = utility . findMax ( sample ) ;
    minValue = utility . findMin ( sample ) ;
    utility . var1 [ 4 ] [ 1 ] [ 0 ] [ 0 ] [ 0 ] [ 0 ] [ 0 ] = 10 ;
    arrayUtility [ 1 ] [ 1 ] [ 1 ] [ 1 ] . var1 [ 4 ] [ 1 ] [ 0 ] [ 0 ] [ 0 ] [ 0 ] [ 0 ] = 2 ;
    put ( maxValue ) ;
    put ( minValue ) ;
    
};


ERRORS OF test_errRecover.txt:

table error, Expected {gen_Term -> multOp term | EPSILON} found Token([, '[', Line:Pos=(3, 19))
table error, Expected {gen_Term -> multOp term | EPSILON} found Token(INT, '7', Line:Pos=(3, 20))
table error, Expected {createOrAssign -> ID indice ; | indice gen_nest assign ;} found Token((, '(', Line:Pos=(12, 15))
error, wrong token. Expected: ; found Token(>, '>', Line:Pos=(12, 27))
error, wrong token. Expected: ; found Token(ID, 'maxValue', Line:Pos=(12, 36))
error, wrong token. Expected: ; found Token(), ')', Line:Pos=(12, 37))
error, wrong token. Expected: ; found Token(then, 'then', Line:Pos=(12, 42))
error, wrong token. Expected: ; found Token({, '{', Line:Pos=(12, 44))
error, wrong token. Expected: ; found Token(ID, 'maxValue', Line:Pos=(13, 21))
error, wrong token. Expected: ; found Token(=, '=', Line:Pos=(13, 23))
error, wrong token. Expected: ; found Token(ID, 'array', Line:Pos=(13, 29))
error, wrong token. Expected: ; found Token([, '[', Line:Pos=(13, 30))
error, wrong token. Expected: ; found Token(ID, 'idx', Line:Pos=(13, 33))
error, wrong token. Expected: ; found Token(], ']', Line:Pos=(13, 34))
error, wrong token. Expected: ; found Token(else, 'else', Line:Pos=(15, 17))
error, wrong token. Expected: ; found Token({, '{', Line:Pos=(15, 18))
error, wrong token. Expected: ; found Token(}, '}', Line:Pos=(15, 19))
table error, Expected {classBody -> type ENTRY_TYPE ID ENTRY_NAME varOrFunc | EPSILON} found Token(return, 'return', Line:Pos=(17, 15))
table error, Expected {classBody -> type ENTRY_TYPE ID ENTRY_NAME varOrFunc | EPSILON} found Token((, '(', Line:Pos=(17, 17))
error, wrong token. Expected: ID found Token(), ')', Line:Pos=(17, 26))
error, wrong token. Expected: ID found Token(;, ';', Line:Pos=(17, 27))
error, wrong token. Expected: ID found Token(}, '}', Line:Pos=(18, 6))
error, wrong token. Expected: ID found Token(;, ';', Line:Pos=(18, 7))
error, wrong token. Expected: ID found Token(int, 'int', Line:Pos=(19, 8))
