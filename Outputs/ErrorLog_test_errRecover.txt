
~err in: term(): Token(SQUARE_OPEN, '[', Line:Pos=(3, 19))

~err in: varDecl(): Token(BRACKET_OPEN, '(', Line:Pos=(12, 15))

~err in: varDeclTail(): Token(COMPARE_OP, '>', Line:Pos=(12, 27))

~err in: varDeclTail(): Token(Id, 'maxvalue', Line:Pos=(12, 36))

~err in: varDeclTail(): Token(BRACKET_CLOSE, ')', Line:Pos=(12, 37))

~err in: varDeclTail(): Token(KEYWORD, 'then', Line:Pos=(12, 42))

~err in: varDeclTail(): Token(CURLY_OPEN, '{', Line:Pos=(12, 44))

~err in: varDeclTail(): Token(Id, 'maxvalue', Line:Pos=(13, 21))

~err in: statement(): Token(KEYWORD, 'else', Line:Pos=(15, 17))

~err in: statement(): Token(CURLY_OPEN, '{', Line:Pos=(15, 18))

~err in: statement(): Token(CURLY_CLOSE, '}', Line:Pos=(15, 19))

~err in: statement(): Token(SEMI_COLON, ';', Line:Pos=(15, 20))

~err in: statement(): Token(CURLY_CLOSE, '}', Line:Pos=(16, 10))

~err in: statement(): Token(SEMI_COLON, ';', Line:Pos=(16, 11))

~err in: statement(): Token(KEYWORD, 'return', Line:Pos=(17, 15))

~err in: statement(): Token(BRACKET_OPEN, '(', Line:Pos=(17, 17))

~err in: statement(): Token(Id, 'maxvalue', Line:Pos=(17, 25))

~err in: statement(): Token(BRACKET_CLOSE, ')', Line:Pos=(17, 26))

~err in: statement(): Token(SEMI_COLON, ';', Line:Pos=(17, 27))

~err in: statement(): Token(CURLY_CLOSE, '}', Line:Pos=(18, 6))

~err in: statement(): Token(SEMI_COLON, ';', Line:Pos=(18, 7))

~err in: statement(): Token(KEYWORD, 'int', Line:Pos=(19, 8))

~err in: statement(): Token(Id, 'findmin', Line:Pos=(19, 16))

~err in: statement(): Token(BRACKET_OPEN, '(', Line:Pos=(19, 17))

~err in: statement(): Token(KEYWORD, 'int', Line:Pos=(19, 20))

~err in: statement(): Token(Id, 'array', Line:Pos=(19, 26))

~err in: statement(): Token(SQUARE_OPEN, '[', Line:Pos=(19, 27))

~err in: statement(): Token(int, '100', Line:Pos=(19, 30))

~err in: statement(): Token(SQUARE_CLOSE, ']', Line:Pos=(19, 31))

~err in: statement(): Token(BRACKET_CLOSE, ')', Line:Pos=(19, 32))

~err in: statement(): Token(CURLY_OPEN, '{', Line:Pos=(20, 6))

~err in: statement(): Token(KEYWORD, 'int', Line:Pos=(21, 12))

~err in: statement(): Token(Id, 'minvalue', Line:Pos=(21, 21))

~err in: statement(): Token(SEMI_COLON, ';', Line:Pos=(21, 22))

~err in: statement(): Token(KEYWORD, 'int', Line:Pos=(22, 12))

~err in: statement(): Token(Id, 'idx', Line:Pos=(22, 16))

~err in: statement(): Token(SEMI_COLON, ';', Line:Pos=(22, 17))

~err in: statement(): Token(Id, 'minvalue', Line:Pos=(23, 17))

~err in: statement(): Token(ASSIGN_OP, '=', Line:Pos=(23, 19))

~err in: statement(): Token(Id, 'array', Line:Pos=(23, 25))

~err in: statement(): Token(SQUARE_OPEN, '[', Line:Pos=(23, 26))

~err in: statement(): Token(int, '100', Line:Pos=(23, 29))

~err in: statement(): Token(SQUARE_CLOSE, ']', Line:Pos=(23, 30))

~err in: statement(): Token(SEMI_COLON, ';', Line:Pos=(23, 31))
