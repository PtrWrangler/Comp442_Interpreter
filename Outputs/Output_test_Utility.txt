classutility{
intvar1[4][5][7][8][9][1][0];
floatvar2;
intfindmax(intarray[100]){
intmaxvalue;
intidx;
maxvalue=array[100];
for(intidx=99;
idx>0;
idx=idx-1){
if(array[idx]>maxvalue)then{
maxvalue=array[idx];
}else{
};
};
return(maxvalue);
};
intfindmin(intarray[100]){
intminvalue;
intidx;
minvalue=array[100];
for(intidx=1;
idx<=99;
idx=(idx)+1){
if(array[idx]<maxvalue)then{
maxvalue=array[idx];
}else{
};
};
return(minvalue);
};
};
program{
intsample[100];
intidx;
intmaxvalue;
intminvalue;
utilityutility;
utilityarrayutility[2][3][6][7];
for(intt=0;
t<=100;
t=t+1){
get(sample[t]);
sample[t]=(sample[t]*randomize());
};
maxvalue=utility.findmax(sample);
minvalue=utility.findmin(sample);
utility.var1[4][1][0][0][0][0][0]=10;
arrayutility[1][1][1][1].var1[4][1][0][0][0][0][0]=2;
put(maxvalue);
put(minvalue);
};
floatrandomize(){
floatvalue;
value=100*(2+3.0/7.0006);
value=1.05+((2.04*2.47)-3.0)+7.0006;
return(value);
};


main parse() returning True